{"version":3,"sources":["views/auth-views/components/LoginForm.js","views/auth-views/authentication/login/index.js"],"names":["LoginForm","props","history","useHistory","useState","loadingLogin","setloadingLogin","hideAuthMessage","extra","loading","showMessage","message","token","redirect","allowRedirect","useEffect","push","setTimeout","localStorage","getItem","role","forgetPassword","className","onClick","disabled","div","initial","opacity","marginBottom","animate","type","showIcon","layout","name","onFinish","values","url","API_BASE_URL","data","email","password","axios","post","then","response","defaults","headers","common","message2","success","setItem","user","id","status","avatarURL","window","location","reload","catch","error","Item","label","rules","required","prefix","MailOutlined","Password","LockOutlined","htmlType","block","defaultProps","otherSignIn","showForgetPassword","mapDispatchToProps","showAuthMessage","showLoading","authenticated","connect","auth","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","LoginOne","theme","useSelector","state","currentTheme","style","justify","xs","sm","md","lg","src","alt","href","Login"],"mappings":"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","file":"static/js/22.e147207b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form, Input, Alert, Divider, message as message2 } from \"antd\";\r\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  showLoading,\r\n  showAuthMessage,\r\n  hideAuthMessage,\r\n  authenticated,\r\n} from \"redux/actions/Auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport { API_BASE_URL } from \"../../../constants/ApiConstant\";\r\nimport axios from \"axios\";\r\n\r\nexport const LoginForm = (props) => {\r\n  let history = useHistory();\r\n  const [loadingLogin, setloadingLogin] = useState(false);\r\n\r\n  const {\r\n    hideAuthMessage,\r\n    extra,\r\n    loading,\r\n    showMessage,\r\n    message,\r\n    token,\r\n    redirect,\r\n    allowRedirect,\r\n  } = props;\r\n\r\n  const pushToAdminHome = () => {\r\n    history.push(\"/admin/home\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const pushToClientHome = () => {\r\n    history.push(\"/client/home\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const onLogin = (values) => {\r\n    //   setloadingLogin(true);\r\n    var url = API_BASE_URL + \"login\";\r\n\r\n    var data = {\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n\r\n    axios\r\n      .post(url, data, {})\r\n      .then((response) => {\r\n        setloadingLogin(false);\r\n\r\n        axios.defaults.headers.common[\"Authorization\"] =\r\n          \"Bearer \" + response.data.token.token;\r\n        message2.success(`Logged In Successfully!`);\r\n        localStorage.setItem(\"token\", response.data.token.token);\r\n        localStorage.setItem(\"id\", response.data.user.id);\r\n        localStorage.setItem(\"email\", response.data.user.email);\r\n        localStorage.setItem(\"name\", response.data.user.name);\r\n        localStorage.setItem(\"role\", response.data.user.role);\r\n        localStorage.setItem(\"status\", response.data.user.status);\r\n        localStorage.setItem(\"avatarURL\", response.data.user.avatarURL);\r\n\r\n        if (+response.data.user.role === 0) {\r\n          pushToAdminHome();\r\n        } else {\r\n          pushToClientHome();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          if (error.response.data) {\r\n            if (error.response.data === \"Invalid credentials\") {\r\n              message2.error(\"Invalid credentials!\");\r\n              return false;\r\n            }\r\n            if (error.response.data.error) {\r\n              message2.error(error.response.data.error);\r\n            } else {\r\n              message2.error(\"Something went wrong!\");\r\n            }\r\n          } else {\r\n            message2.error(\"Something went wrong!\");\r\n          }\r\n        } else {\r\n          message2.error(\"Something went wrong!\");\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token !== null && allowRedirect) {\r\n      history.push(redirect);\r\n    }\r\n    if (showMessage) {\r\n      setTimeout(() => {\r\n        hideAuthMessage();\r\n      }, 3000);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    var token = localStorage.getItem(\"token\");\r\n    var role = localStorage.getItem(\"role\");\r\n    if (token) {\r\n      if (+role === 0) {\r\n        history.push([\"/admin/home\"]);\r\n      } else {\r\n        history.push([\"/client/home\"]);\r\n      }\r\n    }\r\n  }, [history]);\r\n\r\n  const forgetPassword = (\r\n    <div>\r\n      <Divider>\r\n        <span className=\"text-muted font-size-base font-weight-normal\">or</span>\r\n      </Divider>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Button\r\n          onClick={() => history.push(`/auth/forgot-password`)}\r\n          className=\"mr-2 w-100\"\r\n          disabled={loading}\r\n        >\r\n          Forget Password\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        initial={{ opacity: 0, marginBottom: 0 }}\r\n        animate={{\r\n          opacity: showMessage ? 1 : 0,\r\n          marginBottom: showMessage ? 20 : 0,\r\n        }}\r\n      >\r\n        <Alert type=\"error\" showIcon message={message}></Alert>\r\n      </motion.div>\r\n      <Form layout=\"vertical\" name=\"login-form\" onFinish={onLogin}>\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your email\",\r\n            },\r\n            {\r\n              type: \"email\",\r\n              message: \"Please enter a validate email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input prefix={<MailOutlined className=\"text-primary\" />} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          label={\r\n            <div\r\n              className={`d-flex justify-content-between w-100 align-items-center`}\r\n            >\r\n              <span>Password</span>\r\n            </div>\r\n          }\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password prefix={<LockOutlined className=\"text-primary\" />} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block loading={loadingLogin}>\r\n            Sign In\r\n          </Button>\r\n        </Form.Item>\r\n        {/* {\r\n\t\t\t\t\totherSignIn ? renderOtherSignIn : null\r\n\t\t\t\t} */}\r\n        {forgetPassword}\r\n        {extra}\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  otherSignIn: PropTypes.bool,\r\n  showForgetPassword: PropTypes.bool,\r\n  extra: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n};\r\n\r\nLoginForm.defaultProps = {\r\n  otherSignIn: true,\r\n  showForgetPassword: false,\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  const { loading, message, showMessage, token, redirect } = auth;\r\n  return { loading, message, showMessage, token, redirect };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  showAuthMessage,\r\n  showLoading,\r\n  hideAuthMessage,\r\n  authenticated,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import React ,{useEffect} from 'react'\r\nimport LoginForm from '../../components/LoginForm'\r\nimport { Card, Row, Col } from \"antd\";\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst backgroundStyle = {\r\n\tbackgroundImage: 'url(/img/others/img-17.jpg)',\r\n\tbackgroundRepeat: 'no-repeat',\r\n\tbackgroundSize: 'cover'\r\n}\r\n\r\nconst LoginOne = props => {\r\n\tconst theme = useSelector(state => state.theme.currentTheme)\r\n\r\n\tlet history = useHistory();\r\n\r\n\tuseEffect(()=>{\r\n\t\tvar token = localStorage.getItem(\"token\"); \r\n\t\tvar role = +localStorage.getItem(\"role\"); \r\n\t\tif(token) {\r\n\t\t  if(role===0) {\r\n\t\t\thistory.push('/admin/home');\r\n\t\t  } else {\r\n\t\t\thistory.push('/client/home');\r\n\t\t  } \r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t},[])\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"h-100\" style={backgroundStyle}>\r\n\t\t\t<div className=\"container d-flex flex-column justify-content-center h-100\">\r\n\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t<Col xs={20} sm={20} md={20} lg={7}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<div className=\"my-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={`/img/${theme === 'light' ? 'logo.png': 'logo-white.png'}`} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<p>Don't have an account yet? <a href=\"/auth/register\">Sign Up</a></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={20} lg={20}>\r\n\t\t\t\t\t\t\t\t\t\t<LoginForm {...props} />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst Login = () => {\r\n\treturn (\r\n\t\t<LoginOne allowRedirect={true} />\r\n\t)\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}