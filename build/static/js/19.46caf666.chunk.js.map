{"version":3,"sources":["views/app-views/document-single/MakePayment.js","views/app-views/document-single/index.js"],"names":["Title","Typography","Text","MakePayment","props","useState","loading","style","top","width","title","visible","onOk","setOrderStatus","okText","onCancel","setVisible","confirmLoading","level","readOnly","min","value","totalPrice","formatter","replace","parser","className","type","TextArea","Input","msgReducer","state","action","messages","push","message","DocumentSingle","details","setDetails","status","setStatus","statusLevel","setStatusLevel","formURLs","setFormURLs","fileListForm","setFileListForm","docURLs","setDocURLs","fileListDocs","setFileListDocs","fileListAdminDocs","setFileListAdminDocs","useReducer","dispatch","formRef","React","createRef","inputEl","useRef","useEffect","getOrder","match","params","id","url","API_BASE_URL","data","axios","post","then","response","form_urls","doc_urls","legalized_urls","TempFileListForm","map","el","i","url2","SERVER_URL","name","TempFileListDocs","TempFileListAdminDocs","msg_list","catch","error","uploadPropsForm","onChange","info","file","success","fileList","TempFormURLs","forEach","split","current","click","onRemove","setTimeout","uploadPropsDocs","TempDocURLs","getMsgType","obj","msgType","text","src","alt","Flex","alignItems","FileOutlined","onSend","values","newMsg","newMsgData","avatar","from","localStorage","getItem","time","setFieldsValue","msgList","gutter","xs","sm","md","lg","extra","onClick","window","location","href","ref","val","new_status","marginTop","Item","color","UploadOutlined","showUploadList","showRemoveIcon","rows","e","target","elm","onFinish","autoComplete","placeholder","suffix","shape","size","htmlType","SendOutlined"],"mappings":"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","file":"static/js/19.46caf666.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Typography, InputNumber } from \"antd\";\r\nconst { Title, Text } = Typography;\r\n\r\nconst MakePayment = (props) => {\r\n  const [loading] = useState(false);\r\n\r\n  const onCancel = () => {\r\n    props.setVisible(false);\r\n  };\r\n\r\n  const onOk = () => {\r\n    props.setOrderStatus(\"Payment Completed\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        style={{ top: 20 }}\r\n        width={620}\r\n        title=\"Make Payment\"\r\n        visible={props.visible}\r\n        onOk={onOk}\r\n        okText={\"Mark As Paid\"}\r\n        onCancel={onCancel}\r\n        confirmLoading={loading}\r\n      >\r\n        <Title level={4}>Payment Amount</Title>\r\n        <InputNumber\r\n          readOnly\r\n          style={{ width: \"100%\" }}\r\n          min={0}\r\n          value={props.totalPrice}\r\n          formatter={(value) =>\r\n            `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n          }\r\n          parser={(value) => value.replace(/\\$\\s?|(,*)/g, \"\")}\r\n        />\r\n\r\n        <div className={\"mt-4 mb-3\"}>\r\n          <Text type=\"secondary\">\r\n            Payment gateway will be integrated here...\r\n          </Text>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MakePayment;\r\n","import React, { useEffect, useState, useRef, useReducer } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  Timeline,\r\n  Typography,\r\n  Upload,\r\n  Avatar,\r\n  Divider,\r\n  Input,\r\n  Form,\r\n  message,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { FileOutlined, SendOutlined } from \"@ant-design/icons\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { API_BASE_URL, SERVER_URL } from \"../../../constants/ApiConstant\";\r\nimport axios from \"axios\";\r\n// import { io } from \"socket.io-client\";\r\nimport MakePayment from \"./MakePayment\";\r\nconst { Title, Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nfunction msgReducer(state, action) {\r\n  if (action.type === \"NEW_MESSAGE\") {\r\n    state.messages.push(action.message);\r\n    return { ...state };\r\n  }\r\n  if (action.type === \"ALL_MESSAGES\") {\r\n    const messages = [...action.messages];\r\n    state.messages = messages;\r\n    return { ...state };\r\n  }\r\n  return state;\r\n}\r\n\r\nconst DocumentSingle = (props) => {\r\n  // const [msgList, setMsgList] = useState([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [details, setDetails] = useState(\"\");\r\n  const [status, setStatus] = useState(\"Order Created\");\r\n  const [statusLevel, setStatusLevel] = useState(0);\r\n  const [formURLs, setFormURLs] = useState([]);\r\n  const [fileListForm, setFileListForm] = useState([]);\r\n\r\n  const [docURLs, setDocURLs] = useState([]);\r\n  const [fileListDocs, setFileListDocs] = useState([]);\r\n  // const [adminDocs, setAdminDocs] = useState([]);\r\n  const [fileListAdminDocs, setFileListAdminDocs] = useState([]);\r\n  const [state, dispatch] = useReducer(msgReducer, { messages: [] });\r\n\r\n  let formRef = React.createRef();\r\n  const inputEl = useRef(null);\r\n  // const socket = useRef();\r\n\r\n  useEffect(() => {\r\n    getOrder(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  //   useEffect(() => {\r\n  //     socket.current = io(SERVER_URL);\r\n  //     socket.current.on(props.match.params.id, (data) => {\r\n  //       dispatch({ type: \"NEW_MESSAGE\", message: data.newMsgData });\r\n  //     });\r\n  //     return () => {\r\n  //       socket.current?.disconnect();\r\n  //     };\r\n  //   }, [props.match.params.id]);\r\n\r\n  const getOrder = (id) => {\r\n    var url = API_BASE_URL + \"get-order\";\r\n\r\n    var data = {\r\n      id: id,\r\n    };\r\n\r\n    axios\r\n      .post(url, data, {})\r\n      .then((response) => {\r\n        const form_urls = response.data.form_urls;\r\n        const doc_urls = response.data.doc_urls;\r\n        const legalized_urls = response.data.legalized_urls;\r\n\r\n        setFormURLs(form_urls);\r\n        setDocURLs(doc_urls);\r\n        // setAdminDocs(legalized_urls);\r\n        setStatus(response.data.status);\r\n\r\n        if (response.data.status === \"Document Submitted\") setStatusLevel(0);\r\n        if (response.data.status === \"Document Received\") setStatusLevel(1);\r\n        if (response.data.status === \"Payment Request Generated\")\r\n          setStatusLevel(2);\r\n        if (response.data.status === \"Payment Completed\") setStatusLevel(3);\r\n        if (response.data.status === \"Sent For Attestation\") setStatusLevel(4);\r\n        if (response.data.status === \"Attested Documents Uploaded\")\r\n          setStatusLevel(5);\r\n        if (response.data.status === \"Documents Downloaded\") setStatusLevel(6);\r\n        if (response.data.status === \"Order Closed\") setStatusLevel(7);\r\n\r\n        let TempFileListForm = form_urls.map((el, i) => {\r\n          const url2 = SERVER_URL + el;\r\n          return { name: `ORDER_FORM_${i + 1}`, status: \"done\", url: url2 };\r\n        });\r\n\r\n        let TempFileListDocs = doc_urls.map((el, i) => {\r\n          const url2 = SERVER_URL + el;\r\n          return { name: `YOUR_DOCUMENT_${i + 1}`, status: \"done\", url: url2 };\r\n        });\r\n\r\n        let TempFileListAdminDocs = legalized_urls.map((el, i) => {\r\n          const url2 = SERVER_URL + el;\r\n          return {\r\n            name: `ATTESTED_DOCUMENT_${i + 1}`,\r\n            status: \"done\",\r\n            url: url2,\r\n          };\r\n        });\r\n\r\n        setFileListForm(TempFileListForm);\r\n        setFileListDocs(TempFileListDocs);\r\n        setFileListAdminDocs(TempFileListAdminDocs);\r\n        setDetails(response.data.details);\r\n        dispatch({\r\n          type: \"ALL_MESSAGES\",\r\n          messages: response.data.msg_list ? response.data.msg_list : [],\r\n        });\r\n      })\r\n      .catch(() => {\r\n        message.error(\"Something is wrong!\");\r\n      });\r\n  };\r\n\r\n  const uploadPropsForm = {\r\n    name: \"file\",\r\n    action: API_BASE_URL + \"upload-order-docs-clients\",\r\n    onChange(info) {\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded successfully`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n      let fileList = [...info.fileList];\r\n      let TempFormURLs = [];\r\n      fileList.forEach((el) => {\r\n        if (el.status === \"done\") {\r\n          if (el.url) {\r\n            TempFormURLs.push(el.url.split(SERVER_URL)[1]);\r\n          } else {\r\n            TempFormURLs.push(el.response.url);\r\n          }\r\n        }\r\n      });\r\n      setFormURLs(TempFormURLs);\r\n      setFileListForm(fileList);\r\n      if (info.file.status === \"done\") {\r\n        inputEl.current.click();\r\n      }\r\n    },\r\n    onRemove() {\r\n      setTimeout(() => {\r\n        inputEl.current.click();\r\n      }, 500);\r\n    },\r\n  };\r\n\r\n  const uploadPropsDocs = {\r\n    name: \"file\",\r\n    action: `${API_BASE_URL}upload-order-docs-clients`,\r\n    onChange(info) {\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded successfully`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n      let fileList = [...info.fileList];\r\n      let TempDocURLs = [];\r\n      fileList.forEach((el) => {\r\n        if (el.status === \"done\") {\r\n          if (el.url) {\r\n            TempDocURLs.push(el.url.split(SERVER_URL)[1]);\r\n          } else {\r\n            TempDocURLs.push(el.response.url);\r\n          }\r\n        }\r\n      });\r\n      setDocURLs(TempDocURLs);\r\n      setFileListDocs(fileList);\r\n      if (info.file.status === \"done\") {\r\n        inputEl.current.click();\r\n      }\r\n    },\r\n    onRemove() {\r\n      setTimeout(() => {\r\n        inputEl.current.click();\r\n      }, 500);\r\n    },\r\n  };\r\n\r\n  const AdminDocsProps = {\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    onChange({ file, fileList }) {},\r\n    showUploadList: {\r\n      showRemoveIcon: false,\r\n    },\r\n  };\r\n\r\n  const submitDocs = () => {\r\n    var url = API_BASE_URL + \"save-order\";\r\n\r\n    var data = {\r\n      id: props.match.params.id,\r\n      form_urls: formURLs,\r\n      doc_urls: docURLs,\r\n      details: details,\r\n    };\r\n\r\n    axios\r\n      .post(url, data, {})\r\n      .then((response) => {\r\n        message.success(\"Order updated successfully!\");\r\n        getOrder(props.match.params.id);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  const getMsgType = (obj) => {\r\n    switch (obj.msgType) {\r\n      case \"text\":\r\n        return <span>{obj.text}</span>;\r\n      case \"image\":\r\n        return <img src={obj.text} alt={obj.text} />;\r\n      case \"file\":\r\n        return (\r\n          <Flex alignItems=\"center\" className=\"msg-file\">\r\n            <FileOutlined className=\"font-size-md\" />\r\n            <span className=\"ml-2 font-weight-semibold text-link pointer\">\r\n              <u>{obj.text}</u>\r\n            </span>\r\n          </Flex>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {};\r\n\r\n  const onSend = (values) => {\r\n    if (values.newMsg) {\r\n      const newMsgData = {\r\n        avatar: \"\",\r\n        from: localStorage.getItem(\"id\"),\r\n        msgType: \"text\",\r\n        text: values.newMsg,\r\n        time: \"\",\r\n      };\r\n      formRef.current.setFieldsValue({\r\n        newMsg: \"\",\r\n      });\r\n\r\n      dispatch({ type: \"NEW_MESSAGE\", message: newMsgData });\r\n\r\n      scrollToBottom();\r\n      var url = API_BASE_URL + \"send-message-order\";\r\n\r\n      var data = {\r\n        id: props.match.params.id,\r\n        newMsgData: newMsgData,\r\n        msgList: [...state.messages],\r\n      };\r\n\r\n      axios\r\n        .post(url, data, {})\r\n        .then((response) => {})\r\n        .catch(() => {\r\n          message.error(\"Something is wrong!\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const chatContentBody = (props, id) => (\r\n    <div className=\"chat-content-body\">\r\n      <Scrollbars>\r\n        {state.messages &&\r\n          state.messages.map((elm, i) => (\r\n            <div\r\n              key={`msg-${id}-${i}`}\r\n              className={`msg ${elm.msgType === \"date\" ? \"datetime\" : \"\"} ${\r\n                elm.from !== localStorage.getItem(\"id\")\r\n                  ? \"msg-recipient\"\r\n                  : elm.from === localStorage.getItem(\"id\")\r\n                  ? \"msg-sent\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              {elm.avatar ? (\r\n                <div className=\"mr-2\">\r\n                  <Avatar src={elm.avatar} />\r\n                </div>\r\n              ) : null}\r\n              {elm.text ? (\r\n                <div className={`bubble`}>\r\n                  <div className=\"bubble-wrapper\">{getMsgType(elm)}</div>\r\n                </div>\r\n              ) : null}\r\n              {elm.msgType === \"date\" ? <Divider>{elm.time}</Divider> : null}\r\n            </div>\r\n          ))}\r\n      </Scrollbars>\r\n    </div>\r\n  );\r\n\r\n  const chatContentFooter = () => (\r\n    <div className=\"chat-content-footer\">\r\n      <Form name=\"msgInput\" ref={formRef} onFinish={onSend} className=\"w-100\">\r\n        <Form.Item name=\"newMsg\" className=\"mb-0\">\r\n          <Input\r\n            autoComplete=\"off\"\r\n            placeholder=\"Type a message...\"\r\n            suffix={\r\n              <div className=\"d-flex align-items-center\">\r\n                <Button\r\n                  shape=\"circle\"\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  onClick={onSend}\r\n                  htmlType=\"submit\"\r\n                >\r\n                  <SendOutlined />\r\n                </Button>\r\n              </div>\r\n            }\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const changeVisible = (val) => {\r\n    setVisible(val);\r\n  };\r\n\r\n  const setOrderStatus = (new_status) => {\r\n    var url = API_BASE_URL + \"update-order-status\";\r\n\r\n    var data = {\r\n      id: props.match.params.id,\r\n      status: new_status,\r\n    };\r\n\r\n    axios.post(url, data, {}).then((response) => {\r\n      message.success(\"Order updated successfully!\");\r\n      setVisible(false);\r\n      getOrder(props.match.params.id);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={16}>\r\n          <Card\r\n            title={`Order#${props.match.params.id}`}\r\n            extra={\r\n              <>\r\n                {status === \"Payment Request Generated\" && (\r\n                  <Button type=\"primary\" className={\"mr-2\"} onClick={()=> {\r\n                    window.location.href = `https://documentsattestations.com/checkout/?order_id${props.match.params.id}&token=${localStorage.getItem(\"token\")}`;\r\n                  }}>\r\n                    Make Payment\r\n                  </Button>\r\n                )}\r\n\r\n                <Button className={\"d-none\"} ref={inputEl} onClick={submitDocs}>\r\n                  Save Order\r\n                </Button>\r\n              </>\r\n            }\r\n          >\r\n            <MakePayment\r\n              visible={visible}\r\n              setVisible={changeVisible}\r\n              setOrderStatus={setOrderStatus}\r\n            />\r\n\r\n            <Divider style={{ marginTop: 0 }} />\r\n\r\n            <Row gutter={16} className={\"mt-4\"}>\r\n              <Col xs={24} sm={24} md={24} lg={8}>\r\n                <Title level={4} className={\"mb-4\"}>\r\n                  Order Progress\r\n                </Title>\r\n                <Timeline>\r\n                  <Timeline.Item color={\"green\"}>\r\n                    Document Submitted\r\n                  </Timeline.Item>\r\n                  <Timeline.Item color={statusLevel >= 1 ? \"green\" : \"gray\"}>\r\n                    Document Received\r\n                  </Timeline.Item>\r\n                  <Timeline.Item color={statusLevel >= 2 ? \"green\" : \"gray\"}>\r\n                    Payment Request Generated\r\n                  </Timeline.Item>\r\n                  <Timeline.Item color={statusLevel >= 3 ? \"green\" : \"gray\"}>\r\n                    Payment Completed\r\n                  </Timeline.Item>\r\n                  <Timeline.Item color={statusLevel >= 4 ? \"green\" : \"gray\"}>\r\n                    Sent For Attestation\r\n                  </Timeline.Item>\r\n                  <Timeline.Item color={statusLevel >= 5 ? \"green\" : \"gray\"}>\r\n                    Attested Documents Uploaded\r\n                  </Timeline.Item>\r\n                  <Timeline.Item color={statusLevel >= 6 ? \"green\" : \"gray\"}>\r\n                    Documents Downloaded\r\n                  </Timeline.Item>\r\n                  <Timeline.Item color={statusLevel >= 7 ? \"green\" : \"gray\"}>\r\n                    Order Closed\r\n                  </Timeline.Item>\r\n                </Timeline>\r\n              </Col>\r\n              <Col xs={24} sm={24} md={24} lg={8}>\r\n                <Title level={4} className={\"mb-4\"}>\r\n                  Your Form\r\n                </Title>\r\n                <Upload {...uploadPropsForm} fileList={fileListForm}>\r\n                  <Button>\r\n                    <UploadOutlined /> Upload\r\n                  </Button>\r\n                </Upload>\r\n                <Title level={4} className={\"mb-4 mt-4\"}>\r\n                  Your Documents\r\n                </Title>\r\n                <Upload {...uploadPropsDocs} fileList={fileListDocs}>\r\n                  <Button>\r\n                    <UploadOutlined /> Upload\r\n                  </Button>\r\n                </Upload>\r\n              </Col>\r\n              <Col xs={24} sm={24} md={24} lg={8}>\r\n                <Title level={4} className={\"mb-4\"}>\r\n                  Attested Documents\r\n                </Title>\r\n                <Upload\r\n                  {...AdminDocsProps}\r\n                  fileList={fileListAdminDocs}\r\n                ></Upload>\r\n              </Col>\r\n            </Row>\r\n\r\n            <div className={\"mb-4\"}>\r\n              <Text type=\"secondary\">\r\n                Please provide other details (if any) that will assist us to\r\n                escalate your order.\r\n              </Text>\r\n            </div>\r\n            <TextArea\r\n              rows={4}\r\n              value={details}\r\n              onChange={(e) => setDetails(e.target.value)}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={8}>\r\n          <Card title=\"Chat with us\">\r\n            <div className=\"chat\">\r\n              <div className=\"chat-content\">\r\n                <div className=\"chat-content\">\r\n                  {chatContentBody(state.messages, 1)}\r\n                  {chatContentFooter()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DocumentSingle;\r\n"],"sourceRoot":""}